
R = Rcmd

R+CoCo = c:/Programmer/R/rw1041/library/CoCo/R+S/R/bin/R+coco
R+Mips = cat

all:
	make init.out
	make tests

init.out:
	${R+CoCo} --save < init.R > init.out

FewerWarnings.out:
	make init.out
	${R+CoCo} --save < FewerWarnings.R > FewerWarnings.out
#	make tests

TestFiles.out:
	( echo "TestFiles.S             " ; \
	 sed -f input.sed ../Test.S+CoCo/TestFiles.S     > TestFiles.r       ; \
	 time ${R+CoCo} --no-save < TestFiles.r          > TestFiles.out )

TestSwitch.out:
	( echo "TestSwitch.S            " ; \
	 sed -f input.sed ../Test.S+CoCo/TestSwitch.S    > TestSwitch.r      ; \
	 time ${R+CoCo} --no-save < TestSwitch.r         > TestSwitch.out )

TestSet.out:
	( echo "TestSet.S               " ; \
	 sed -f input.sed ../Test.S+CoCo/TestSet.S       > TestSet.r         ; \
	 time ${R+CoCo} --no-save < TestSet.R            > TestSet.out )

TestDataFiles.out:
	( echo "TestDataFiles.S         " ; \
	 sed -f input.sed ../Test.S+CoCo/TestDataFiles.S > TestDataFiles.r   ; \
	 time ${R+CoCo} --no-save < TestDataFiles.r      > TestDataFiles.out )

TestSubset.out:
	( echo "TestSubset.S            " ; \
	 sed -f input.sed ../Test.S+CoCo/TestSubset.S    > TestSubset.r      ; \
	 time ${R+CoCo} --no-save < TestSubset.r         > TestSubset.out )
	cp TestSubset.r TestSubset.S

TestDefault.out:
	( echo "TestDefault.S           " ; \
	 sed -f input.sed ../Test.S+CoCo/TestDefault.S   > TestDefault.r     ; \
	 time ${R+CoCo} --no-save < TestDefault.r        > TestDefault.out )

TestReturn.out:
	( echo "TestReturn.S            " ; \
	 sed -f input.sed ../Test.S+CoCo/TestReturn.S    > TestReturn.r      ; \
	 time ${R+CoCo} --no-save < TestReturn.r         > TestReturn.out )

TestSelection.out:
	( echo "TestSelection.S         " ; \
	 sed -f input.sed ../Test.S+CoCo/TestSelection.S > TestSelection.r   ; \
	 time ${R+CoCo} --no-save < TestSelection.r      > TestSelection.out )

TestRedefine.out:
	( echo "TestRedefine.S          " ; \
	 sed -f input.sed ../Test.S+CoCo/TestRedefine.S  > TestRedefine.r    ; \
	 time ${R+CoCo} --no-save < TestRedefine.r       > TestRedefine.out )

TestQtable.out:
	( echo "TestQtable.S            " ; \
	 sed -f input.sed ../Test.S+CoCo/TestQtable.S    > TestQtable.r      ; \
	 time ${R+CoCo} --no-save < TestQtable.R         > TestQtable.out )

TestTableValues.out:
	( echo "TestTableValues.S       " ; \
	 sed -f input.sed ../Test.S+CoCo/TestTableValues.S > TestTableValues.r   ; \
	 time ${R+CoCo} --no-save < TestTableValues.r    > TestTableValues.out )

TestModel.out:
	( echo "TestModel.S             " ; \
	 sed -f input2.sed ../Test.S+CoCo/TestModel.S     > TestModel.r       ; \
	 time ${R+CoCo} --no-save < TestModel.r          > TestModel.out )

TestModelList.out:
	( echo "TestModelList.S         " ; \
	 sed -f input.sed ../Test.S+CoCo/TestModelList.S > TestModelList.r   ; \
	 time ${R+CoCo} --no-save < TestModelList.r      > TestModelList.out )

TestPrintModel.out:
	( echo "TestPrintModel.S        " ; \
	 sed -f input.sed ../Test.S+CoCo/TestPrintModel.S  > TestPrintModel.r ; \
	 time ${R+CoCo} --no-save < TestPrintModel.r     > TestPrintModel.out )

TestIs.out:
	( echo "TestIs.S                " ; \
	 sed -f input.sed ../Test.S+CoCo/TestIs.S        > TestIs.r          ; \
	 time ${R+CoCo} --no-save < TestIs.r             > TestIs.out )

TestTest.out:
	( echo "TestTest.S              " ; \
	 sed -f input.sed ../Test.S+CoCo/TestTest.S      > TestTest.r        ; \
	 time ${R+CoCo} --no-save < TestTest.r           > TestTest.out )

TestEdit.out:
	( echo "TestEdit.S              " ; \
	 sed -f input2.sed ../Test.S+CoCo/TestEdit.S      > TestEdit.r        ; \
	 time ${R+CoCo} --no-save < TestEdit.r           > TestEdit.out )

TestStepwise.out:
	( echo "TestStepwise.S          " ; \
	 sed -f input.sed ../Test.S+CoCo/TestStepwise.S  > TestStepwise.r    ; \
	 time ${R+CoCo} --no-save < TestStepwise.r       > TestStepwise.out )

TestEHInit.out:
	( echo "TestEHInit.S            " ; \
	 sed -f input.sed ../Test.S+CoCo/TestEHInit.S    > TestEHInit.r      ; \
	 time ${R+CoCo} --no-save < TestEHInit.r         > TestEHInit.out )

TestEH.out:
	( echo "TestEH.S                " ; \
	 sed -f input.sed ../Test.S+CoCo/TestEH.S        > TestEH.r          ; \
	 time ${R+CoCo} --no-save < TestEH.r             > TestEH.out )

TestToEH.out:
	( echo "TestToEH.S              " ; \
	 sed -f input.sed ../Test.S+CoCo/TestToEH.S      > TestToEH.r        ; \
	 time ${R+CoCo} --no-save < TestToEH.r           > TestToEH.out )

TestExtractEH.out:
	( echo "TestExtractEH.S         " ; \
	 sed -f input.sed ../Test.S+CoCo/TestExtractEH.S > TestExtractEH.r   ; \
	 time ${R+CoCo} --no-save < TestExtractEH.r      > TestExtractEH.out )

TestForceEH.out:
	( echo "TestForceEH.S           " ; \
	 sed -f input.sed ../Test.S+CoCo/TestForceEH.S   > TestForceEH.r     ; \
	 time ${R+CoCo} --no-save < TestForceEH.r        > TestForceEH.out )

TestAddDual.out:
	( echo "TestAddDual.S           " ; \
	 sed -f input.sed ../Test.S+CoCo/TestAddDual.S   > TestAddDual.r     ; \
	 time ${R+CoCo} --no-save < TestAddDual.r        > TestAddDual.out )

TestCoCoModelObject.out:
	( echo "TestCoCoModelObject.S   " ; \
	 sed -f input.sed ../Test.S+CoCo/TestCoCoModelObject.S > TestCoCoModelObject.r ; \
	 time ${R+CoCo} --no-save < TestCoCoModelObject.r > TestCoCoModelObject.out ) 


tests: TestFiles.out TestSwitch.out TestSet.out TestDataFiles.out TestSubset.out TestDefault.out TestReturn.out TestSelection.out TestRedefine.out TestQtable.out TestTableValues.out TestModel.out TestModelList.out TestPrintModel.out TestIs.out TestTest.out TestEdit.out TestStepwise.out TestEHInit.out TestEH.out TestToEH.out TestExtractEH.out TestForceEH.out TestAddDual.out TestCoCoModelObject.out

subdir = R+S/tests/Test.R+CoCo

clean:
	@echo "cleaning in $(subdir)"
	@-rm -f *~

distclean: clean
	@-rm -rf Affald ? Work
